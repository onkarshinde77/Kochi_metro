// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Predicts the probability of a train receiving certificate clearance based on current conditions.
 *
 * - predictCertificateClearance - A function that predicts the certificate clearance probability.
 * - PredictCertificateClearanceInput - The input type for the predictCertificateClearance function.
 * - PredictCertificateClearanceOutput - The return type for the predictCertificateClearance function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const PredictCertificateClearanceInputSchema = z.object({
  weatherCondition: z
    .string()
    .describe('The current weather condition (e.g., sunny, rainy, snowy).'),
  trainModel: z.string().describe('The model of the train (e.g., ICE3, TGV).'),
  maintenanceHistory: z
    .string()
    .describe('A summary of the recent maintenance history of the train.'),
  lastInspectionDate: z
    .string()
    .describe('The date of the last train inspection (YYYY-MM-DD).'),
});

export type PredictCertificateClearanceInput = z.infer<
  typeof PredictCertificateClearanceInputSchema
>;

const PredictCertificateClearanceOutputSchema = z.object({
  probability: z
    .number()
    .min(0)
    .max(1)
    .describe(
      'The probability (0 to 1) of the train receiving certificate clearance.'
    ),
  reasoning: z
    .string()
    .describe('The reasoning behind the predicted probability.'),
});

export type PredictCertificateClearanceOutput = z.infer<
  typeof PredictCertificateClearanceOutputSchema
>;

export async function predictCertificateClearance(
  input: PredictCertificateClearanceInput
): Promise<PredictCertificateClearanceOutput> {
  return predictCertificateClearanceFlow(input);
}

const prompt = ai.definePrompt({
  name: 'predictCertificateClearancePrompt',
  input: {schema: PredictCertificateClearanceInputSchema},
  output: {schema: PredictCertificateClearanceOutputSchema},
  prompt: `You are an expert in train certification. Given the current conditions, predict the probability of a train receiving certificate clearance.

Weather Condition: {{{weatherCondition}}}
Train Model: {{{trainModel}}}
Maintenance History: {{{maintenanceHistory}}}
Last Inspection Date: {{{lastInspectionDate}}}

Respond with a probability between 0 and 1, and the reasoning behind your prediction.`,
});

const predictCertificateClearanceFlow = ai.defineFlow(
  {
    name: 'predictCertificateClearanceFlow',
    inputSchema: PredictCertificateClearanceInputSchema,
    outputSchema: PredictCertificateClearanceOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
